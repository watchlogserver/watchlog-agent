apiVersion: v1
kind: ConfigMap
metadata:
  name: watchlog-config
  namespace: default
data:
  integration.json: |
    [
        { "service": "mongodb", "monitor": false, "username": "", "password": "" },
        { "service": "redis", "monitor": false, "host": "127.0.0.1", "port": "6379", "password": "" },
        { "service": "nginx", "monitor": false, "accessLog": "/var/log/nginx/access.log" },
        { "service": "postgresql", "monitor": false, "host": "localhost", "port": "5432", "username": "", "password": "", "database": [] },
        { "service": "mysql", "monitor": false, "host": "localhost", "port": "3306", "username": "root", "password": "", "database": [] }
    ]
  log-watchlist.json: |
    {
      "logs": []
    }
---
apiVersion: v1
kind: Service
metadata:
  name: watchlog-node-agent
  namespace: default
spec:
  selector:
    app: watchlog-node-agent
  ports:
    - name: http
      protocol: TCP
      port: 3774
      targetPort: 3774
  clusterIP: None
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: watchlog-node-agent
  namespace: default
automountServiceAccountToken: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: watchlog-node-agent-role
rules:
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: watchlog-node-agent-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: watchlog-node-agent-role
subjects:
  - kind: ServiceAccount
    name: watchlog-node-agent
    namespace: default
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: watchlog-node-agent
  namespace: default
  labels:
    app: watchlog-node-agent
spec:
  selector:
    matchLabels:
      app: watchlog-node-agent
  template:
    metadata:
      labels:
        app: watchlog-node-agent
    spec:
      serviceAccountName: watchlog-node-agent
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
        - name: agent
          image: watchlog-node-agent:v1
          imagePullPolicy: Never
          ports:
            - name: http
              containerPort: 3774
              hostPort: 3774
          env:
            - name: UUID
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: MODE
              value: "node"
            - name: WATCHLOG_APIKEY
              value: "8ed204e18781f2c99c6e0bf101ce44d8"
            - name: WATCHLOG_SERVER
              value: "http://192.168.1.10:7896"
            - name: WATCHLOG_CLUSTER_NAME
              value: "default-cluster"
          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: host-root
              mountPath: /host
              mountPropagation: HostToContainer
            - name: proc
              mountPath: /proc
            - name: sys
              mountPath: /sys
            - name: docker-sock
              mountPath: /var/run/docker.sock
          securityContext:
            privileged: true
            capabilities:
              add: ["SYS_ADMIN"]
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "1"
              memory: "1Gi"
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
        - key: node-role.kubernetes.io/control-plane
          effect: NoSchedule
        - key: node.kubernetes.io/disk-pressure
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/memory-pressure
          operator: Exists
          effect: NoSchedule
        - key: node.kubernetes.io/network-unavailable
          operator: Exists
          effect: NoSchedule
      volumes:
        - name: config-volume
          configMap:
            name: watchlog-config
        - name: host-root
          hostPath:
            path: /
        - name: proc
          hostPath:
            path: /proc
        - name: sys
          hostPath:
            path: /sys
        - name: docker-sock
          hostPath:
            path: /var/run/docker.sock